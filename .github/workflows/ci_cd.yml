name: "Ruby on Rails CI"
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      PGHOST: localhost
      PGUSER: postgres
      PGPASSWORD: docker
    services:
      db:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: docker
          POSTGRES_DB: planner_test
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup System
        run: sudo apt-get install -y libpq-dev
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Wait for PostgreSQL to become available
        run: |
          wget https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh
          chmod +x wait-for-it.sh
          ./wait-for-it.sh localhost:5432 --timeout=60
      - name: Set up database schema
        run: bin/rails db:schema:load RAILS_ENV=test
      - name: Run tests
        run: bundle exec rspec

  build-and-push:
    name: "Build and Push"
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate sha
        id: generate_sha
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Build docker image
        run: docker build -t killercf/planner.api:${{ steps.generate_sha.outputs.sha }} .

      - name: Log into container register
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image to container register
        run: |
          docker push killercf/planner.api:${{ steps.generate_sha.outputs.sha }}
          docker tag killercf/planner.api:${{ steps.generate_sha.outputs.sha }} killercf/planner.api:latest
          docker push killercf/planner.api:latest
